extends /layouts/application.pug

block content
    .container.align-content-center.justify-content-center
        .py-4
            h2.text-center Task details
    .container.col-6.mt-4
        .row
            .col-4.text-nowrap
                b Task ID
            .col-8.text-nowrap.card.card-block.card-outline-secondary.h-50= formatId(task.id)
        .row.p-2
            .col-4.text-nowrap
                b Status
            .col-8.text-nowrap.well-white= task.status
        .row.p-2
            .col-4.text-nowrap
                b Title
            .col-8.text-nowrap.well-white= task.name
        .row.p-2
            .col-4.text-nowrap
                b Tags
            .col-8.text-nowrap.well-white= task.tags
        .row.p-2
            .col-4.text-nowrap
                b Created at
            .col-8.text-nowrap.well-white= formatDate(task.createdAt)
        .row.p-2
            .col-4.text-nowrap
                b Created by
            .col-8.text-nowrap.well-white= task.creator
        .row.p-2
            .col-4.text-nowrap
                b Assigned to
            .col-8.text-nowrap.well-white= task.assignedTo
        .row.p-2
            .col-4.text-nowrap
                b Description
            .col-8.well-white= task.description


        .row.form-group.mt-5
            .col-md-4
                form(action=urlFor('task#edit', {id: task.id}) method='get')
                    button.btn.btn-block.btn-warning(type='submit') Edit task
            .col-md-4
                form(action=urlFor('task#destroy', {id: task.id}) method='post')
                    button.btn.btn-block.btn-danger(type='submit' name='_method' value='delete') Delete task
    if isSignedIn()
        .container
            table.table
                thead.thead-bordered
                    tbody
                        tr
                            th(scope='row') ID
                            td= task.id
                        tr
                            th(scope='row') Task
                            td= task.name
                        tr
                            th(scope='row') Tags
                            td= task.tags
                        tr
                            th(scope='row') Created At
                            td= formatDate(task.createdAt)
                        tr
                            th(scope='row') Status
                            td= task.status
                        tr
                            th(scope='row') Created By
                            td= task.creator
                        tr
                            th(scope='row') Assigned To
                            td= task.assignedTo
                        tr
                            th(scope='row') Description
                            td= task.description
            form(action=urlFor('tasks#update', {id: task.id}), method='post')
                - const value = f.object[property] === undefined ? '' : f.object[property]
                .form-group(class=(f.errors[property] && 'has-danger'))
                    select(name='statusId' class='form-control' value=`${value}`)
                        option(selected= 1) Change status
                        each status in statuses
                            option(value= status.id)= status.name
                    input(type='hidden' name='_method' value='PATCH')
                    input(type='hidden' name='taskId' value= task.id)
                    button.btn.btn-block Update Status
            form(action=urlFor('tasks#edit', {id: task.id}) method='get')
                button.btn.btn-block(type='submit') Edit task

            form(action=urlFor('tasks#destroy', { id: task.id }) method='post')
                button.btn.btn-block.btn-danger.mt-5(type='submit' name='_method' value='delete') Delete task